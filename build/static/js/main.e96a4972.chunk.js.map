{"version":3,"sources":["icons/77218-search-imm.gif","BooksAPI.js","components/book.js","views/searchPage.js","views/main.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","books","update","book","shelf","id","method","body","JSON","stringify","search","query","maxResults","Book","updateShelfs","shelftype","className","imageLinks","style","width","height","backgroundImage","smallThumbnail","value","onChange","event","a","BookAPI","console","log","updateshelf","target","disabled","title","authors","map","author","SearchPage","bookShelfs","useState","setQuery","setbooks","to","type","placeholder","trim","updateQuery","Array","isArray","pop","findIndex","ele","src","searchImage","alt","Main","filter","booksh","App","setbookShelfs","useEffect","getShelfs","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e96a4972.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/77218-search-imm.2fa25157.gif\";","const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import { useState } from \"react\";\nimport * as BookAPI from \"../BooksAPI\";\nconst Book = ({ book, updateShelfs, shelftype }) => {\n  //   const [bookWillMove, setbookWillMove] = useState(\"\");\n  const updateshelf = (shelf, book) => {\n    const update = async () => {\n      const res = await BookAPI.update(book, shelf);\n      console.log(res);\n      updateShelfs();\n    };\n    update();\n  };\n  return (\n    <div className=\"book\">\n      <div className=\"book-top\">\n        {book.imageLinks ? (\n          <div\n            className=\"book-cover\"\n            style={{\n              width: 128,\n              height: 193,\n              backgroundImage: \"url(\" + book.imageLinks.smallThumbnail + \")\",\n            }}\n          ></div>\n        ) : (\n          <div\n            className=\"book-cover\"\n            style={{\n              width: 128,\n              height: 193,\n              backgroundImage: \"url()\",\n            }}\n          ></div>\n        )}\n        <div className=\"book-shelf-changer\">\n          <select\n            value={\n              book.shelf ? book.shelf : shelftype === -1 ? \"none\" : shelftype\n            }\n            onChange={(event) => updateshelf(event.target.value, book)}\n          >\n            <option value=\"none\" disabled>\n              Move to...\n            </option>\n            <option value=\"currentlyReading\">Currently Reading</option>\n            <option value=\"wantToRead\">Want to Read</option>\n            <option value=\"read\">Read</option>\n            {shelftype !== -1 && <option value=\"none\">None</option>}\n          </select>\n        </div>\n      </div>\n      <div className=\"book-title\">{book.title}</div>\n      <div className=\"book-authors\">\n        {book.authors && book.authors.map((author) => author + \" \")}\n      </div>\n    </div>\n  );\n};\nexport default Book;\n","import { Link } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport searchImage from \"../icons/77218-search-imm.gif\";\nimport * as BookAPI from \"../BooksAPI\";\nimport Book from \"../components/book\";\n\nconst SearchPage = ({updateShelfs, bookShelfs}) => {\n  const [query, setQuery] = useState(\"\");\n  const [books, setbooks] = useState([]);\n  const updateQuery = (query) => {\n    setQuery(query.trim());\n    const search = async () => {\n      const res = await BookAPI.search(query, 10);\n      setbooks(res);\n    };\n    search();\n  };\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <Link className=\"close-search\" to=\"/\">\n          Close\n        </Link>\n        <div className=\"search-books-input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by title, author, or ISBN\"\n            value={query}\n            onChange={(event) => updateQuery(event.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        <ol className=\"books-grid\">\n          {(query === \"\" || !Array.isArray(books))? (\n            <img src={searchImage} alt=\"searchImage\" />\n          ) : (\n            books.map((book) => {\n              \n                let found = (ele) => ele.id === book.id;\n                let pop = Array.isArray(bookShelfs) && bookShelfs.findIndex(found);\n              \n              return (\n              \n                <li key={book.id}>\n                  <Book shelftype={pop !== -1 ? bookShelfs[pop].shelf : -1} updateShelfs={updateShelfs} book={book} />\n                </li>\n              )\n            } \n          )\n          )}\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Book from \"../components/book\";\nconst Main = ({ updateShelfs, bookShelfs }) => {\n    // const books = bookShelfs ? bookShelfs.filter(booksh => booksh.shelf === \"currentlyReading\") : []\n    // console.log(books);\n    // const currentlyReading = books.map((book)=>(\n    //     <li  key={book.id}>\n    //         <Book book={book}/>\n    //     </li>\n    // ))\n  return (\n    <div className=\"list-books\">\n      <div className=\"list-books-title\">\n        <h1>MyReads</h1>\n      </div>\n      <div className=\"list-books-content\">\n        <div>\n          <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">Currently Reading</h2>\n            <div className=\"bookshelf-books\">\n              <ol className=\"books-grid\">\n                {Array.isArray(bookShelfs) && (bookShelfs.filter(booksh => booksh.shelf === \"currentlyReading\").map((book) => (\n                    <li  key={book.id}>\n                           <Book updateShelfs={updateShelfs} book={book}/>\n                     </li>\n                )))\n            }\n              </ol>\n            </div>\n          </div>\n          <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">Want to Read</h2>\n            <div className=\"bookshelf-books\">\n              <ol className=\"books-grid\">\n              {Array.isArray(bookShelfs) && (bookShelfs.filter(booksh => booksh.shelf === \"wantToRead\").map((book) => (\n                    <li  key={book.id}>\n                           <Book updateShelfs={updateShelfs} book={book}/>\n                     </li>\n                )))\n            }\n              </ol>\n            </div>\n          </div>\n          <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">Read</h2>\n            <div className=\"bookshelf-books\">\n              <ol className=\"books-grid\">\n              {Array.isArray(bookShelfs) && (bookShelfs.filter(booksh => booksh.shelf === \"read\").map((book) => (\n                    <li  key={book.id}>\n                           <Book updateShelfs={updateShelfs} book={book}/>\n                     </li>\n                )))\n            }\n              </ol>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"open-search\">\n        <Link to=\"/search\">Add a book</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport SearchPage from \"./views/searchPage\";\nimport Main from \"./views/main\";\nimport { Route, Routes } from \"react-router-dom\";\nimport * as BookAPI from \"./BooksAPI\";\n\nfunction App() {\n\n  const [bookShelfs, setbookShelfs] = useState([]);\n  useEffect(() => {\n    const getShelfs = async () => {\n      const res = await BookAPI.getAll();  \n      console.log(res) \n      setbookShelfs(res);     \n    };\n    getShelfs();\n  }, []);\n  const updateShelfs = ()=> {\n    const getShelfs = async () => {\n      const res = await BookAPI.getAll();  \n      console.log(res) \n      setbookShelfs(res);     \n    };\n    getShelfs();\n  }\n  // const [showSearchPage, setShowSearchpage] = useState(false);\n\n  return (\n    <div className=\"app\">\n      <Routes>\n        <Route exact path=\"/\" element={<Main bookShelfs={bookShelfs} updateShelfs={updateShelfs} />} />\n        <Route path=\"/search\" element={<SearchPage bookShelfs={bookShelfs}  updateShelfs={updateShelfs} />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}